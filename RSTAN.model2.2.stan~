  data {
    int<lower=0> J; // number of children
    int<lower=0> I; // number of families
    int<lower=0> C; // number of cohorts
    real<lower=0> y[J]; // number of recombinations
    int<lower=0> family[J]; // indicates which family is with each child
    real<lower=0> Age[J]; //maternal age at birth
    int cohort[J];//which cohort (0=QTR,1=NTR)

   }
  parameters {
    real beta_Age;
    vector[C-1] beta_Cohort;
    real<lower=0> tausq; //variance of number of scrossovers
    //parameters for distribution of a0
    real mu_m; //mean for intercept
  }
  transformed parameters {
    vector[J] mu;
    vector[J] my_beta_Cohort;
    for(j in 1:J){
         if(cohort[j]==1){
              my_beta_Cohort[j] <- 0;
         } else {
              my_beta_Cohort[j] <- beta_Cohort[cohort[j]-1];
         }
       mu[j] <- mu_m+ beta_Age*Age[j] + my_beta_Cohort[j];
    }
  }
  model {
  //Priors
    beta_Age ~ normal(0,1); //coefficient for age

    beta_Cohort ~ normal(0,4); //coefficient for cohort

    tausq ~ inv_gamma(2,70);   //variance in number of crossovers

    mu_m ~ normal(38,sqrt(3));//pick something sensible - this is the mean of a0; I chose the intercept from lm(mat.counts$Count~mat.counts$Maternal.age.at.birth)

    y ~ normal(mu,sqrt(tausq)) ;
}

