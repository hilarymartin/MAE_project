normal.model.code.cohort.specific.b <- '
  data {
    int<lower=0> J; // number of children
    int<lower=0> I; // number of families
    real<lower=0> y[J]; // number of recombinations
    int<lower=0> family[J]; // indicates which family is with each child
    real<lower=0> Age[J]; //maternal age at birth
    int cohort[J];//which cohort (0=QTR,1=NTR)
   }
  transformed data{
    int index[J];
    for(j in 1:J){
    index[j] <- cohort[j]+1;
    }
  }       
  parameters {
    real<lower=0> a0[I]; // random effect of families
    vector[5]  beta_Age;
    vector[4] beta_Cohort;
    real<lower=0> tausq; //variance of number of scrossovers
    //parameters for distribution of a0
    real  mu_m; //mean for intercept
    real<lower=0> sigmasq_m; //variance for intercept
  }
  transformed parameters {
    real<lower=0> a0_bychild[J];
    vector[J] mu;
    vector[J] my_beta_Cohort;
    for(j in 1:J){
       a0_bychild[j]<-a0[family[j]];
         if(cohort[j]==0){
              my_beta_Cohort[j] <- 0;
         } else {
              my_beta_Cohort[j] <- beta_Cohort[cohort[j]];
         }
       mu[j] <- a0_bychild[j]+ beta_Age[index[j]]*Age[j] + my_beta_Cohort[j];
    }
  }
  model {
  //Priors
    beta_Age[1] ~ normal(0,1); //coefficient for age
    beta_Age[2] ~ normal(0,1); //coefficient for age
    beta_Age[3] ~ normal(0,1); //coefficient for age
    beta_Age[4] ~ normal(0,1); //coefficient for age
    beta_Age[5] ~ normal(0,1); //coefficient for age

    beta_Cohort[1] ~ normal(0,4); //coefficient for cohort
    beta_Cohort[2] ~ normal(0,4); //coefficient for cohort
    beta_Cohort[3] ~ normal(0,4); //coefficient for cohort
    beta_Cohort[4] ~ normal(0,4); //coefficient for cohort
    tausq ~ inv_gamma(2,70);   //variance in number of crossovers

    mu_m ~ normal(38,sqrt(3));//pick something sensible - this is the mean of a0; I chose the intercept from lm(mat.counts$Count~mat.counts$Maternal.age.at.birth)
    sigmasq_m ~ inv_gamma(5,10);//pick something sensible - this is the variance of a0

   for(i in 1:I){ //random effects of the families
      a0[i] ~ normal(mu_m,sqrt(sigmasq_m));
   }
   y ~ normal(mu,sqrt(tausq)) ;
}
'
