setwd( "/gpfs1/well/donnelly/hilary/maternal_age_and_recombination/")
p.cutoff=c(0,0.5,0.9,0.95)
files=c("QTR/duoHMM_results/QTR.370K.generr_removed.total_recombination_counts.maternal.p_0.txt","QTR/duoHMM_results/QTR.610K.generr_removed.total_recombination_counts.maternal.p_0.txt",
"NTR/duoHMM_results/NTR.generr_removed.total_recombination_counts.maternal.p_0.txt","FC/duoHMM_results/FC.generr_removed.total_recombination_counts.maternal.p_0.txt",
"ORCADES/duoHMM_results/ORCADES_raw_merged.max_0.05_missing.generr_removed.total_recombination_counts.maternal.p_0.txt","CARL/duoHMM_results/CARL.generr_removed.total_recombination_counts.maternal.p_0.txt",
"VB/duoHMM_results/VB.generr_removed.total_recombination_counts.maternal.p_0.txt","FVG/duoHMM_results/FVG.generr_removed.total_recombination_counts.maternal.p_0.txt",
"VIS_KORCULA/duoHMM_results/VIS.generr_removed.total_recombination_counts.maternal.p_0.txt","VIS_KORCULA/duoHMM_results/KORCULA.generr_removed.total_recombination_counts.maternal.p_0.txt")
names(files)=c("QTR.370","QTR.610K","NTR","FC","ORCADES.intersection","CARL","VB","FVG","VIS","KORCULA")


mydir="/home/hilary/maternal_age_recombination/exploring_duoHMM_calls"

for(p in p.cutoff){
matfiles=gsub("p_0",paste("p_",p,sep=""),files)
pdf(paste(mydir,"/","total_maternal_recombination_counts.p_",p,".pdf",sep=""),height=5*3,width=2*5)
par(mfrow=c(5,2))
for(i in 1:length(matfiles)){
mat.counts=read.delim(matfiles[i],header=T)

hist1=hist(mat.counts$total,plot=F)
hist(mat.counts$total,main=paste("maternal counts ",names(files)[i],sep=""),xlab=paste("crossover count, p=",p,sep=""),xlim=range(hist1$breaks),ylim=c(0,max(hist1$counts)))
if(i==1){
legend("topright",c("all duos","duos from families with >2 kids"),fill=c("white","grey"),cex=0.8)
legend("topleft",c("mean","median","all duos","duos from families with >2 kids"),lty=c(1,1,1,3),col=c("red","blue","black","black"),cex=0.8)
}
if(sum(mat.counts$total_same_mother>2)>0){
mat.counts2=mat.counts[mat.counts$total_same_mother>2,]
hist(mat.counts2$total,main="",xlab="",col="grey",add=T)
abline(v=median(mat.counts2$total),col="red",lty=3)
abline(v=mean(mat.counts2$total),col="blue",lty=3)
}
abline(v=median(mat.counts$total),col="red")
abline(v=mean(mat.counts$total),col="blue")
}
dev.off()
}


#print out quantiles of distribution
for(p in p.cutoff){
matfiles=gsub("p_0",paste("p_",p,sep=""),files)
stats=NULL

for(i in 1:length(matfiles)){
cohort.stats=c()
mat.counts=read.delim(matfiles[i],header=T)
cohort.stats=c(cohort.stats,nrow(mat.counts),mean(mat.counts$total),quantile(mat.counts$total,c(0,0.25,0.5,0.75,1)),sd(mat.counts$total))

if(sum(mat.counts$total_same_mother>2)>0){
mat.counts2=mat.counts[mat.counts$total_same_mother>2,]
cohort.stats=c(cohort.stats,nrow(mat.counts2),mean(mat.counts2$total),quantile(mat.counts2$total,c(0,0.25,0.5,0.75,1)),sd(mat.counts2$total))
}else {
cohort.stats=c(cohort.stats,0,NA,NA,NA,NA,NA,NA,NA)
}
if(sum(mat.counts$n_genotyped_maternal_grandparents>0)>0){
mat.counts2=mat.counts[mat.counts$n_genotyped_maternal_grandparents>0,]
cohort.stats=c(cohort.stats,nrow(mat.counts2),mean(mat.counts2$total),quantile(mat.counts2$total,c(0,0.25,0.5,0.75,1)),sd(mat.counts2$total))
}else {
cohort.stats=c(cohort.stats,0,NA,NA,NA,NA,NA,NA,NA)
}

if(sum(mat.counts$n_genotyped_maternal_grandparents>0|mat.counts$total_same_mother>2)>0){
mat.counts2=mat.counts[mat.counts$n_genotyped_maternal_grandparents>0|mat.counts$total_same_mother>2,]
cohort.stats=c(cohort.stats,nrow(mat.counts2),mean(mat.counts2$total),quantile(mat.counts2$total,c(0,0.25,0.5,0.75,1)),sd(mat.counts2$total))
}else {
cohort.stats=c(cohort.stats,0,NA,NA,NA,NA,NA,NA,NA)
}
stats=rbind(stats,cohort.stats)
}
rownames(stats)=names(files)
colnames(stats)=c(sapply(c("all_families","min_3_kids","3_generations","informative"),function(x){paste(x,c("n_duos","mean","min","25th_pc","median","75th_pc","max","stdev"),sep=".")}))
write.table(stats,paste(mydir,"/","summary_of_total_maternal_recombination_counts.p_",p,".txt",sep=""),sep="\t",quote=F)
}

for(p in p.cutoff){
matfiles=gsub("p_0",paste("p_",p,sep=""),files)
pdf(paste(mydir,"/","total_maternal_recombination_counts.p_",p,".all_vs_three_generation_pedigrees.pdf",sep=""),height=5*3,width=2*5)
par(mfrow=c(5,2))
for(i in 1:length(matfiles)){
mat.counts=read.delim(matfiles[i],header=T)
hist1=hist(mat.counts$total,plot=F)
hist(mat.counts$total,main=paste("maternal counts ",names(files)[i],sep=""),xlab=paste("crossover count, p=",p,sep=""),xlim=range(hist1$breaks),ylim=c(0,max(hist1$counts)))
if(i==1){
legend("topright",c("all duos","duos from three-generation families"),fill=c("white","grey"),cex=0.8)
legend("topleft",c("mean","median","all duos","duos from three-generation families"),lty=c(1,1,1,3),col=c("red","blue","black","black"),cex=0.8)
}
if(sum(mat.counts$n_genotyped_maternal_grandparents>0)>0){
mat.counts2=mat.counts[mat.counts$n_genotyped_maternal_grandparents>0,]
hist(mat.counts2$total,main="",xlab="",col="grey",add=T)
abline(v=median(mat.counts2$total),col="red",lty=3)
abline(v=mean(mat.counts2$total),col="blue",lty=3)
}
abline(v=median(mat.counts$total),col="red")
abline(v=mean(mat.counts$total),col="blue")
}
dev.off()
}



for(p in p.cutoff){
matfiles=gsub("p_0",paste("p_",p,sep=""),files)
pdf(paste(mydir,"/","total_maternal_recombination_counts.p_",p,".all_vs_informative_meioses.pdf",sep=""),height=5*3,width=2*5)
par(mfrow=c(5,2))
for(i in 1:length(matfiles)){
mat.counts=read.delim(matfiles[i],header=T)
hist1=hist(mat.counts$total,plot=F)
hist(mat.counts$total,main=paste("maternal counts ",names(files)[i],sep=""),xlab=paste("crossover count, p=",p,sep=""),xlim=range(hist1$breaks),ylim=c(0,max(hist1$counts)))
if(i==1){
legend("topright",c("all duos","duos from informative meioses"),fill=c("white","grey"),cex=0.8)
legend("topleft",c("mean","median","all duos","duos from informative meioses"),lty=c(1,1,1,3),col=c("red","blue","black","black"),cex=0.8)
}
if(sum(mat.counts$n_genotyped_maternal_grandparents>0|mat.counts$total_same_mother>2)>0){
mat.counts2=mat.counts[mat.counts$n_genotyped_maternal_grandparents>0|mat.counts$total_same_mother>2,]
hist(mat.counts2$total,main="",xlab="",col="grey",add=T)
abline(v=median(mat.counts2$total),col="red",lty=3)
abline(v=mean(mat.counts2$total),col="blue",lty=3)
}
abline(v=median(mat.counts$total),col="red")
abline(v=mean(mat.counts$total),col="blue")
}
dev.off()
}




